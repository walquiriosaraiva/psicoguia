{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/wizard/_wizard.scss","webpack:///./src/components/wizard/examples.pug","webpack:///./src/components/swipe/swipe.js","webpack:///./src/components/wizard/wizard.js","webpack:///./src/components/wizard/examples/wizard-horizontal.pug","webpack:///./src/components/wizard/examples/wizard-vertical.pug"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;AClFA;AAAA;;;;;;;;;ACAA;AAAe,oFAAuB,oCAAoC,E;;;;;;;;;;;;ACAnE;AACP,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACe,8DAAoB;;;ACjEc;AACjD,MAAM,eAAQ;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6CAA6C,8BAA8B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,iCAAiC;AAChD;AACA,4CAA4C,iCAAiC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iCAAiC;AAC3E;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6FAA6F,WAAW;AACxG;AACA;AACA,2BAA2B,KAAoB;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,eAAQ;AAC9B;AACe,2FAAQ;;;;;;;;;;;;;;;;;;;;;AC5LvB;AAAe,oFAAuB,sDAAsD,E;;;;;;;;ACA5F;AAAe,oFAAuB,oDAAoD,E","file":"components/wizard/wizard.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 337);\n","// extracted by mini-css-extract-plugin\nexport {};","export default __webpack_public_path__ + \"components/wizard/examples.html\";","export class SwipeEventDispatcher {\n  constructor(element, options = {}) {\n    this.evtMap = {\n      SWIPE_DOWN: [],\n      SWIPE_LEFT: [],\n      SWIPE_RIGHT: [],\n      SWIPE_UP: [],\n    }\n    this.xDown = null\n    this.yDown = null\n    this.element = element\n    this.options = Object.assign({ triggerPercent: 0.3 }, options)\n    element.addEventListener(\n      'touchstart',\n      (evt) => {\n        return this.handleTouchStart(evt)\n      },\n      false\n    )\n    element.addEventListener(\n      'touchend',\n      (evt) => {\n        return this.handleTouchEnd(evt)\n      },\n      false\n    )\n  }\n\n  on(evt, cb) {\n    this.evtMap[evt].push(cb)\n  }\n\n  off(evt, lcb) {\n    this.evtMap[evt] = this.evtMap[evt].filter((cb) => {\n      return cb !== lcb\n    })\n  }\n\n  trigger(evt, data) {\n    this.evtMap[evt].map((handler) => {\n      return handler(data)\n    })\n  }\n\n  handleTouchStart(evt) {\n    this.xDown = evt.touches[0].clientX\n    this.yDown = evt.touches[0].clientY\n  }\n\n  handleTouchEnd(evt) {\n    const deltaX = evt.changedTouches[0].clientX - this.xDown\n    const deltaY = evt.changedTouches[0].clientY - this.yDown\n    const distMoved = Math.abs(\n      Math.abs(deltaX) > Math.abs(deltaY) ? deltaX : deltaY\n    )\n    const activePct = distMoved / this.element.offsetWidth\n    if (activePct > this.options.triggerPercent) {\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        deltaX < 0 ? this.trigger('SWIPE_LEFT') : this.trigger('SWIPE_RIGHT')\n      } else {\n        deltaY > 0 ? this.trigger('SWIPE_DOWN') : this.trigger('SWIPE_UP')\n      }\n    }\n  }\n}\nexport default SwipeEventDispatcher\n","import SwipeEventDispatcher from '../swipe/swipe'\nclass BRWizard {\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    // DOM elements\n    this.DOMstrings = {\n      stepFormPanelClass: 'wizard-panel',\n      // stepFormPanels: document.querySelectorAll('.wizard-panel'),\n      stepFormPanels: this.component.querySelectorAll('.wizard-panel'),\n      stepNextBtnClass: 'wizard-btn-next',\n      stepPrevBtnClass: 'wizard-btn-prev',\n      // stepsBar: document.querySelector('.wizard-progress'),\n      stepsBar: this.component.querySelector('.wizard-progress'),\n      stepsBarClass: 'wizard-progress',\n      stepsBtnClass: 'wizard-progress-btn',\n      // stepsBtns: document.querySelectorAll(`.wizard-progress-btn`),\n      stepsBtns: this.component.querySelectorAll('.wizard-progress-btn'),\n      // stepsForm: document.querySelector('.wizard-form'),\n      stepsForm: this.component.querySelector('.wizard-form'),\n    }\n    // remove class from a set of items\n    this.removeAttributes = (elemSet, attrName) => {\n      elemSet.forEach((elem) => {\n        elem.removeAttribute(attrName)\n      })\n    }\n    // return exect parent node of the element\n    this.findParent = (elem, parentClass) => {\n      let currentNode = elem\n      while (!currentNode.classList.contains(parentClass)) {\n        currentNode = currentNode.parentNode\n      }\n      return currentNode\n    }\n    // get active button step number\n    this.getActiveStep = (elem) => {\n      return Array.from(this.DOMstrings.stepsBtns).indexOf(elem)\n    }\n    // set all steps before clicked (and clicked too) to active\n    this.setActiveStep = (activeStepNum) => {\n      // remove active state from all the state\n      this.removeAttributes(this.DOMstrings.stepsBtns, 'active')\n      // this.removeAttributes(this.DOMstrings.stepsBtns, 'disabled')\n\n      // set picked items to active\n      this.DOMstrings.stepsBtns.forEach((elem, index) => {\n        if (index === activeStepNum) {\n          elem.removeAttribute('disabled')\n          elem.setAttribute('active', '')\n        }\n        // if (index > activeStepNum) {\n        //   elem.setAttribute('disabled', 'disabled')\n        // }\n      })\n    }\n    // get active panel\n    this.getActivePanel = () => {\n      let activePanel\n      this.DOMstrings.stepFormPanels.forEach((elem) => {\n        if (elem.hasAttribute('active')) {\n          activePanel = elem\n        }\n      })\n      return activePanel\n    }\n    // open active panel (and close unactive panels)\n    this.setActivePanel = (activePanelNum) => {\n      // remove active class from all the panels\n      this.removeAttributes(this.DOMstrings.stepFormPanels, 'active')\n      // show active panel\n      this.DOMstrings.stepFormPanels.forEach((elem, index) => {\n        if (index === activePanelNum) {\n          elem.setAttribute('active', '')\n        }\n      })\n    }\n    this.setStepsNum = () => {\n      this.DOMstrings.stepsBtns.forEach((elem, index) => {\n        elem.setAttribute('step', index + 1)\n      })\n    }\n    this.setStep = (num) => {\n      const activeStep = num <= this.DOMstrings.stepsBtns.length ? num - 1 : 0\n      this.setActiveStep(activeStep)\n      this.setActivePanel(activeStep)\n    }\n    this.collapseSteps = () => {\n      this.component.setAttribute('collapsed', '')\n    }\n    this.expandSteps = () => {\n      this.component.removeAttribute('collapsed')\n    }\n    this._setBehavior()\n  }\n\n  _setBehavior() {\n    // STEPS BAR CLICK FUNCTION\n    this.DOMstrings.stepsBar.addEventListener('click', (e) => {\n      // check if click target is a step button\n      const eventTarget = e.target\n      if (!eventTarget.classList.contains(`${this.DOMstrings.stepsBtnClass}`)) {\n        e.target.parentNode.click()\n        return\n      }\n      // get active button step number\n      const activeStep = this.getActiveStep(eventTarget)\n      // set all steps before clicked (and clicked too) to active\n      this.setActiveStep(activeStep)\n      // open active panel\n      this.setActivePanel(activeStep)\n    })\n    // PREV/NEXT BTNS CLICK\n    this.DOMstrings.stepsForm.addEventListener('click', (e) => {\n      const eventTarget = e.target\n      // check if we clicked on `PREV` or NEXT` buttons\n      if (\n        !(\n          eventTarget.classList.contains(\n            `${this.DOMstrings.stepPrevBtnClass}`\n          ) ||\n          eventTarget.classList.contains(`${this.DOMstrings.stepNextBtnClass}`)\n        )\n      ) {\n        return\n      }\n      // find active panel\n      const activePanel = this.findParent(\n        eventTarget,\n        `${this.DOMstrings.stepFormPanelClass}`\n      )\n      let activePanelNum = Array.from(this.DOMstrings.stepFormPanels).indexOf(\n        activePanel\n      )\n      // set active step and active panel onclick\n      if (\n        eventTarget.classList.contains(`${this.DOMstrings.stepPrevBtnClass}`)\n      ) {\n        activePanelNum -= 1\n        activePanel.style.left = '1%'\n      } else {\n        activePanelNum += 1\n        activePanel.style.left = '-1%'\n      }\n      this.setActiveStep(activePanelNum)\n      this.setActivePanel(activePanelNum)\n    })\n    // Set Steps label number\n    this.setStepsNum()\n    // Set default active step\n    if (this.component.hasAttribute('step')) {\n      this.setStep(this.component.getAttribute('step'))\n    }\n    // set steps buttons grid style if it needs to scroll horizontaly\n    if (\n      this.component.hasAttribute('scroll') &&\n      !this.component.hasAttribute('vertical')\n    ) {\n      const stepsWidth =\n        Math.round(100 / this.DOMstrings.stepsBtns.length) - 0.5\n      this.DOMstrings.stepsBar.style.gridTemplateColumns = `repeat(auto-fit, minmax(100px, ${stepsWidth}% ))`\n    }\n    // Swipe\n    const dispatcher = new SwipeEventDispatcher(this.DOMstrings.stepsBar)\n    if (this.component.hasAttribute('vertical')) {\n      dispatcher.on('SWIPE_LEFT', () => {\n        this.collapseSteps()\n      })\n      dispatcher.on('SWIPE_RIGHT', () => {\n        this.expandSteps()\n      })\n      this.DOMstrings.stepsForm.ontouchstart = () => {\n        this.collapseSteps()\n      }\n    } else {\n      this.DOMstrings.stepsBar.ontouchstart = () => {\n        this.expandSteps()\n      }\n      this.DOMstrings.stepsForm.ontouchstart = () => {\n        this.collapseSteps()\n      }\n    }\n  }\n}\nconst wizardList = []\nfor (const brWizard of window.document.querySelectorAll('.br-wizard')) {\n  wizardList.push(new BRWizard('br-wizard', brWizard))\n}\nexport default BRWizard\n","export default __webpack_public_path__ + \"components/wizard/examples/wizard-horizontal.html\";","export default __webpack_public_path__ + \"components/wizard/examples/wizard-vertical.html\";"],"sourceRoot":""}