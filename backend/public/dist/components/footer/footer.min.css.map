{"version":3,"sources":["webpack://./src/components/footer/_footer.scss","webpack://./src/partial/scss/mixins/_states.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAmJA,WAtIC,kDAAA,CACA,wCAAA,CACA,yCAAA,CACA,yBAAA,CACA,yBAAA,CACA,uEAAA,CACA,4BAAA,CACA,4BAAA,CAGA,mCAAA,CACA,yCAAA,CACA,yBAAA,CACA,aAAA,CAGA,mCAPD,CASC,+BC0BA,sCAAA,CACA,4CAAA,CACA,8CAAA,CACA,mCAAA,CACA,iCAAA,CACA,mCAAA,CACA,qCAAA,CACA,kCDhCD,CAIC,yCAEC,mCAAA,CACA,gCAKF,CAHE,oGC0BD,sCAAA,CACA,0CAAA,CACA,4CAAA,CACA,wCAAA,CACA,iCAAA,CACA,mCAAA,CACA,qCAAA,CACA,uCDpBD,CAPC,iBACC,kCASF,CARE,qBACC,oCAAA,CACA,kCAUH,CALC,oBAEC,kBAAA,CACA,YAMF,CCpDE,yCACC,qHDsDH,CCjDE,0CACC,yHDmDH,CAXE,2BACC,wBAaH,CAXE,6BACC,MAaH,CATE,+BACC,YAAA,CACA,cAWH,CErBI,yBFaC,4DACC,YAAA,CACA,mBAWJ,CATG,iDACC,MAWJ,CAPE,wCACC,qBAAA,CACA,0BASH,CACF,CAPG,uCACC,UASJ,CAHG,yFAEC,UAKJ,CAJI,2GACC,mBAAA,CACA,WAAA,CACA,mCAAA,CACA,WAAA,CACA,oBAAA,CACA,gBAAA,CACA,eAAA,CACA,eAAA,CACA,iCAAA,CACA,sBAOL,CAJG,iFAEC,WAAA,CACA,SAMJ,CE9CI,4BFqCD,iFAKE,yBAAA,CACA,cASH,CANI,gRACC,4CAaL,CACF,CALC,2BACC,QAOF,CAJE,wBACC,uCAAA,CACA,qCAMH,CEjFI,yBFiFF,iBACC,iBAGD,CACF","file":"footer.min.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin footer-init {\n\t@include footer-tokens;\n\t@include footer-appearance;\n\t@include footer-dark;\n\t@include footer-light;\n\t@include footer-logo;\n\t@include footer-list;\n\t@include footer-social;\n\t@include footer-info;\n}\n@mixin footer-tokens {\n\t--footer-background: var(--color-primary-darken-02);\n\t--footer-color: var(--color-secondary-01);\n\t--footer-border: var(--color-secondary-04);\n\t--footer-logo-height: 48px;\n\t--footer-logo-width: 180px;\n\t--footer-logo-padding: var(--spacing-scale-6x) 0 var(--spacing-scale-4x);\n\t--footer-assigns-height: 46px;\n\t--footer-assigns-width: 180px;\n}\n@mixin footer-appearance {\n\tbackground: var(--footer-background);\n\tborder-top: 1px solid var(--footer-border);\n\tcolor: var(--footer-color);\n\tdisplay: block;\n}\n@mixin footer-dark {\n\t--bg-color: var(--footer-background);\n\t@include dark-mode;\n\t.#{$prefix}item {\n\t\t@include dark-mode;\n\t}\n}\n@mixin footer-light {\n\t&[inverted],\n\t&.inverted {\n\t\t--footer-background: var(--bg-color);\n\t\t--footer-color: var(--text-color);\n\t\t@include light-mode;\n\t\t.#{$prefix}item {\n\t\t\t@include light-mode;\n\t\t}\n\t}\n}\n@mixin footer-logo {\n\t.logo {\n\t\tpadding: var(--footer-logo-padding);\n\t\timg {\n\t\t\tmax-height: var(--footer-logo-height);\n\t\t\tmax-width: var(--footer-logo-widht);\n\t\t}\n\t}\n}\n@mixin footer-list {\n\t.#{$prefix}item {\n\t\t@include hover;\n\t\talign-items: center;\n\t\tdisplay: flex;\n\t\t&.active {\n\t\t\tbackground: transparent;\n\t\t}\n\t\t.content {\n\t\t\tflex: 1;\n\t\t}\n\t}\n\t.#{$prefix}list {\n\t\t&.horizontal {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\t@include media-breakpoint-up(md) {\n\t\t\t\t.#{$prefix}item {\n\t\t\t\t\t.support:last-child {\n\t\t\t\t\t\tdisplay: none;\n\t\t\t\t\t\tpointer-events: none;\n\t\t\t\t\t}\n\t\t\t\t\t.content {\n\t\t\t\t\t\tflex: 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// evita collapse no breakpoint\n\t\t\t\t.#{$prefix}list {\n\t\t\t\t\tbackground-image: none;\n\t\t\t\t\tmax-height: 200em !important;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.header {\n\t\t\t\twidth: 100%;\n\t\t\t}\n\t\t\t//  Para ser compatível com outros navegadores no\n\t\t\t//  uso máximo de 2 linhas, foram adicionados os\n\t\t\t//  comandos line-height e max-height.\n\n\t\t\t.#{$prefix}item,\n\t\t\t.#{$prefix}list .#{$prefix}item {\n\t\t\t\theight: 4em;\n\t\t\t\t.content {\n\t\t\t\t\tbox-orient: vertical;\n\t\t\t\t\tdisplay: box;\n\t\t\t\t\tfont-weight: var(--font-weight-bold);\n\t\t\t\t\theight: auto;\n\t\t\t\t\t-webkit-line-clamp: 2;\n\t\t\t\t\tline-height: 16px;\n\t\t\t\t\tmax-height: 32px;\n\t\t\t\t\toverflow: hidden;\n\t\t\t\t\tpadding: 0 var(--spacing-scale-2x);\n\t\t\t\t\ttext-overflow: ellipsis;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.col,\n\t\t\t[class*=\"col-\"] {\n\t\t\t\tflex-grow: 0;\n\t\t\t\tpadding: 0;\n\t\t\t\t@include media-breakpoint-down(sm) {\n\t\t\t\t\tflex-basis: 100% !important;\n\t\t\t\t\tmax-width: 100%;\n\t\t\t\t\t.#{$prefix}item.header.active {\n\t\t\t\t\t\tborder-bottom: 1px solid var(--footer-border);\n\t\t\t\t\t\t+ .#{$prefix}list {\n\t\t\t\t\t\t\tborder-bottom: 1px solid var(--footer-border);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n@mixin footer-social {\n\t.social-network {\n\t\tborder: 0;\n\t}\n\t.assigns {\n\t\timg {\n\t\t\tmax-height: var(--footer-assigns-height);\n\t\t\tmax-width: var(--footer-assigns-width);\n\t\t}\n\t}\n}\n@mixin footer-info {\n\t@include media-breakpoint-up(md) {\n\t\t.info {\n\t\t\ttext-align: center;\n\t\t}\n\t}\n}\n\n.#{$prefix}footer {\n\t@include footer-init;\n}\n","// Desabilitado\n@mixin disabled {\n\tcursor: not-allowed;\n\topacity: var(--disabled);\n\n\t* {\n\t\tpointer-events: none;\n\t}\n}\n\n// Hover\n@mixin hover {\n\t&:not(:disabled) {\n\t\t&:hover {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--hover)),\n\t\t\t\trgba(var(--interactive-rgb), var(--hover))\n\t\t\t);\n\t\t}\n\t\t&:active {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed)),\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed))\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Focus\n@mixin focus {\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible,\n\t&:focus-visible {\n\t\toutline-color: var(--focus-color);\n\t\toutline-offset: var(--focus-offset);\n\t\toutline-style: var(--focus-style);\n\t\toutline-width: var(--focus-width);\n\t}\n}\n\n@mixin focus-shadow {\n\tborder-color: var(--focus-color);\n\tbox-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n\toutline: none;\n}\n\n// Ativo\n@mixin active {\n\tbackground: var(--active);\n\tcolor: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n\t--text-color: var(--color-secondary-01);\n\t--interactive: var(--color-primary-pastel-01);\n\t--interactive-rgb: var(--rgb-primary-pastel-01);\n\t--visited: var(--color-secondary-04);\n\t--hover: var(--surface-opacity-sm);\n\t--pressed: var(--surface-opacity-lg);\n\t--focus-color: var(--color-support-10);\n\t--active: var(--color-secondary-01);\n}\n@mixin light-mode {\n\t--text-color: var(--color-secondary-08);\n\t--interactive: var(--color-primary-default);\n\t--interactive-rgb: var(--rgb-primary-default);\n\t--visited: var(--color-primary-darken-01);\n\t--hover: var(--surface-opacity-xs);\n\t--pressed: var(--surface-opacity-md);\n\t--focus-color: var(--color-support-03);\n\t--active: var(--color-primary-darken-01);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}