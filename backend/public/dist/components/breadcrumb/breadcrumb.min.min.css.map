{"version":3,"sources":["webpack://./src/components/breadcrumb/_breadcrumb.scss","webpack://./src/partial/scss/mixins/_states.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"names":[],"mappings":"AAEA,eACE,mBAAA,CACA,iBADF,CAGE,2BACE,kBAAA,CACA,WAAA,CACA,YAAA,CACA,eAAA,CACA,QAAA,CACA,eAAA,CACA,iBAAA,CACA,SADJ,CAGI,kCACE,kBAAA,CACA,YAAA,CACA,8BAAA,CACA,uBADN,CAEM,wCACE,+BAAA,CACA,6BAAR,CACQ,6DACE,iBACV,CAEM,oCACE,cAAA,CACA,wCAAA,CACA,qCAAA,CACA,eAAA,CACA,eAAA,CACA,SAAA,CACA,oBAAA,CACA,sBAAA,CACA,kBAAR,CCxBE,yDACC,qHD0BH,CCrBE,0DACC,yHDuBH,CAFM,oFAEE,iDAAA,CACA,kBAAA,CACA,YAAA,CACA,aAAA,CACA,iBAGR,CAFQ,gGACE,wBAAA,CACA,eAIV,CAHU,0IACE,+BAAA,CACA,iBAKZ,CACQ,2DACE,+BAAA,CACA,cAAA,CACA,wCAAA,CACA,qCAAA,CACA,kBACV,CAIE,wBACE,4BAAA,CACA,iBAAA,CACA,2BAAA,CACA,iBAAA,CACA,8BAFJ,CAIM,wCACE,SAFR,CAIU,0DACE,cAFZ,CAGY,4DACE,oBAAA,CACA,eAAA,CACA,eAAA,CACA,sBAAA,CACA,kBADd,CCxEE,+EACC,qHD0EH,CCrEE,gFACC,yHDuEH,CElBI,4BFwBE,6CACE,YAHN,CAME,wBACE,8BAJJ,CACF,CE1BI,4BFkCA,oCACE,aAAA,CACA,eAAA,CACA,eAAA,CACA,sBAAA,CACA,kBALJ,CAOE,+IAGE,YALJ,CACF","file":"breadcrumb.min.min.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n.#{$prefix}breadcrumb {\n  display: inline-grid;\n  position: relative;\n  // PÃ¡gina inicial\n  .crumb-list {\n    align-items: center;\n    border: none;\n    display: flex;\n    list-style: none;\n    margin: 0;\n    overflow-x: auto;\n    overflow-y: hidden;\n    padding: 0;    \n    // Cada item\n    .crumb {\n      align-items: center;\n      display: flex;\n      height: v(spacing-scale-5x);\n      margin: auto 0 auto -5px;\n      .icon {\n        color: v(color-secondary-04);\n        font-size: v(icon-size-sm);\n        &.fas.fa-chevron-right {\n          margin-right: -6px;\n        }\n      }\n      a {\n        cursor: pointer;\n        font-size: v(font-size-scale-down-01);\n        font-weight: v(font-weight-medium);\n        max-width: 180px;\n        overflow: hidden;\n        padding: 0;\n        text-decoration: none;\n        text-overflow: ellipsis;\n        white-space: nowrap;        \n        @include hover;\n      }\n\n      &.home,\n      &.menu-mobil {\n        --focus-offset: calc(var(--spacing-scale-half) * -1);\n        align-items: center;\n        display: flex;\n        margin-left: 0;\n        margin-right: -3px;\n        .icon {\n          color: var(--interactive);\n          position: static;\n          &.fas.fa-chevron-right {\n            color: var(--color-secondary-04);\n            margin-right: -8px;\n          }\n        }\n      }\n      // Item ativo\n      &[data-active=\"active\"] {\n        span {\n          color: v(color-secondary-08);\n          cursor: default;\n          font-size: v(font-size-scale-down-01);\n          font-weight: v(font-weight-medium);\n          white-space: nowrap;\n        }\n      }\n    }\n  }\n  .br-card {\n    left: v(spacing-scale-9x);\n    position: absolute;    \n    top: v(spacing-scale-7x);    \n    width: fit-content;\n    z-index: var(--z-index-layer-1);\n    .front {\n      .content {\n        padding: 0;\n        .br-list {\n          .br-item {\n            cursor: pointer;\n            a {\n              display: inline-block;\n              max-width: 180px;\n              overflow: hidden;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n            }\n            @include hover;\n          }\n        }\n      }\n    }\n  }\n\n  @include media-breakpoint-down(xs) {\n    .crumb-list .menu-mobil > {\n      .icon {\n        display: none;\n      }\n    }\n    .br-card {\n      left: v(spacing-scale-base);\n    }\n  }\n\n  @include media-breakpoint-down(sm) {\n    .crumb-list .crumb a {\n      display: block;\n      max-width: 180px;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      white-space: nowrap;            \n    }\n    .crumb-list .crumb.menu-mobil,\n    .crumb-list .crumb.menu-mobil + .crumb,\n    .crumb-list .crumb.home + .crumb {\n      display: flex;\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n\tcursor: not-allowed;\n\topacity: var(--disabled);\n\n\t* {\n\t\tpointer-events: none;\n\t}\n}\n\n// Hover\n@mixin hover {\n\t&:not(:disabled) {\n\t\t&:hover {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--hover)),\n\t\t\t\trgba(var(--interactive-rgb), var(--hover))\n\t\t\t);\n\t\t}\n\t\t&:active {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed)),\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed))\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Focus\n@mixin focus {\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible,\n\t&:focus-visible {\n\t\toutline-color: var(--focus-color);\n\t\toutline-offset: var(--focus-offset);\n\t\toutline-style: var(--focus-style);\n\t\toutline-width: var(--focus-width);\n\t}\n}\n\n@mixin focus-shadow {\n\tborder-color: var(--focus-color);\n\tbox-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n\toutline: none;\n}\n\n// Ativo\n@mixin active {\n\tbackground: var(--active);\n\tcolor: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n\t--text-color: var(--color-secondary-01);\n\t--interactive: var(--color-primary-pastel-01);\n\t--interactive-rgb: var(--rgb-primary-pastel-01);\n\t--visited: var(--color-secondary-04);\n\t--hover: var(--surface-opacity-sm);\n\t--pressed: var(--surface-opacity-lg);\n\t--focus-color: var(--color-support-10);\n\t--active: var(--color-secondary-01);\n}\n@mixin light-mode {\n\t--text-color: var(--color-secondary-08);\n\t--interactive: var(--color-primary-default);\n\t--interactive-rgb: var(--rgb-primary-default);\n\t--visited: var(--color-primary-darken-01);\n\t--hover: var(--surface-opacity-xs);\n\t--pressed: var(--surface-opacity-md);\n\t--focus-color: var(--color-support-03);\n\t--active: var(--color-primary-darken-01);\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n"]}