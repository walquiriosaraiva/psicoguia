{"version":3,"sources":["webpack://./src/pages/onboarding/_onboarding.scss","webpack://./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://./src/partial/scss/mixins/_states.scss","webpack://./src/partial/scss/mixins/_button.scss"],"names":[],"mappings":"AAwKA,iBA3JC,uCAAA,CACA,+BAAA,CACA,4CAAA,CACA,+CAAA,CACA,kDAAA,CACA,qDAAA,CACA,iDAAA,CACA,8BAAA,CACA,+BAAA,CACA,oDAAA,CACA,mCAAA,CAIA,6BAAA,CACA,wCAAA,CAwGA,+CAAA,CACA,qCArHD,CC4CI,yBD4GJ,iBA1IE,iDAVA,CACF,CAsEI,0CACC,yCAAA,CAEA,uBAAA,CACA,iBAAA,CACA,SArEL,CEdE,+DACC,qHFgBH,CEXE,gEACC,yHFaH,CAgEK,iDACC,0CAAA,CACA,SAAA,CACA,SA9DN,CAgEK,gGAEC,SA/DN,CAyEE,6DACC,iBAAA,CACA,iBAAA,CACA,SAvEH,CA0EC,+BACC,uCAAA,CACA,iBAAA,CACA,iBAAA,CACA,SAxEF,CAyEE,mDACC,UAvEH,CApBC,yCACC,QAAA,CACA,iBAAA,CACA,iBAAA,CACA,kCAAA,CACA,SAsBF,CApBC,iCACC,WAAA,CG/BA,iCAAA,CACA,6BAAA,CACA,iCAAA,CACA,qBAAA,CACA,+CAAA,CACA,iDAAA,CACA,oBAAA,CACA,mBAAA,CACA,oBAAA,CACA,mBAAA,CACA,kCAAA,CACA,0CAAA,CACA,iBAAA,CAIA,4CAAA,CACA,kBAAA,CACA,yCAAA,CACA,qCAAA,CACA,kCAAA,CACA,yBAAA,CACA,cAAA,CACA,mBAAA,CACA,iCAAA,CACA,qCAAA,CACA,yBAAA,CACA,sBAAA,CACA,6BAAA,CACA,iBAAA,CACA,qBAAA,CACA,kBAAA,CACA,UAAA,CHGA,gBAkDF,CGnDE,qCACE,4BHqDJ,CEtEC,8DACC,YFwEF,CErEC,4IAEC,gCAAA,CACA,kCAAA,CACA,gCAAA,CACA,gCFsEF,CEhGE,6EACC,qHFkGH,CE7FE,8EACC,yHF+FH,CAhEG,8DACC,eAkEJ,CA9DC,0EAEC,mBAAA,CACA,kBAAA,CACA,iBAAA,CACA,wCAAA,CACA,wBAgEF,CA9DC,qCACC,MAgEF,CA9DC,qCACC,OAgEF,CA9DC,qCACC,yCAAA,CACA,gDAAA,CACA,wCAAA,CACA,0CAAA,CACA,qBAAA,CACA,gBAAA,CACA,UAAA,CACA,eAAA,CACA,UAAA,CACA,uCAgEF,CA9DC,mCEhFA,kBAAA,CACA,uBFiJD,CE/IC,qCACC,mBFiJF,CAhBE,4CACC,uDAkBH,CAhBE,6CACC,sDAkBH,CAhBE,yHAGC,wDAgBH,CAdE,uCACC,qDAgBH,CAVC,kCACC,uCAAA,CACA,6BAYF,CAXE,sDACC,yCAAA,CACA,gDAAA,CACA,wCAaH,CAXE,sDACC,6CAAA,CACA,4CAaH","file":"onboarding.min.css","sourcesContent":["@import \"../../partial/scss/base\";\n\n@mixin onboarding {\n\t@include onboarding-tokens;\n\t@include onboarding-base;\n\t@include onboarding-bullets;\n\t@include onboarding-skip;\n\t@include onboarding-buttons;\n\t@include onboarding-tooltip;\n\t@include onboarding-floating;\n}\n\n@mixin onboarding-tokens {\n\t--onboarding-background: var(--bg-color);\n\t--onboarding-color: var(--color);\n\t--onboarding-padding: var(--spacing-scale-2x);\n\t--onboarding-title: var(--font-size-scale-up-01);\n\t--onboarding-font-size: var(--font-size-scale-base);\n\t--onboarding-font-weight: var(--font-weight-semi-bold);\n\t--onboarding-width: var(--onboarding-width-mobile);\n\t--onboarding-width-mobile: 90vw;\n\t--onboarding-width-tablet: 400px;\n\t--onboarding-tooltip-background: var(--color-warning);\n\t--onboarding-tooltip-color: inhrerit;\n}\n\n@mixin onboarding-base {\n\twidth: var(--onboarding-width);\n\tmax-width: var(--onboarding-width-tablet);\n\t@include media-breakpoint-up(sm) {\n\t\t--onboarding-width: var(--onboarding-width-tablet);\n\t}\n}\n\n@mixin onboarding-buttons {\n\t.introjs-tooltipbuttons {\n\t\tborder: 0;\n\t\tposition: relative;\n\t\ttext-align: center;\n\t\tmargin: 0 var(--onboarding-padding);\n\t\tpadding: 0;\n\t}\n\t.introjs-button {\n\t\t--pressed: 0;\n\t\t--button-size: var(--button-medium);\n\t\t@include button-tokens;\n\t\t@include button-base;\n\t\ttext-shadow: none;\n\t\t&:not(.introjs-disabled) {\n\t\t\t@include focus;\n\t\t\t@include hover;\n\t\t\t&:focus {\n\t\t\t\tbox-shadow: none;\n\t\t\t}\n\t\t}\n\t}\n\t.introjs-nextbutton,\n\t.introjs-prevbutton {\n\t\t--button-radius: 50%;\n\t\t--button-padding: 0;\n\t\tposition: absolute;\n\t\ttop: calc(var(--onboarding-padding) * -5.5);\n\t\twidth: var(--button-size);\n\t}\n\t.introjs-prevbutton {\n\t\tleft: 0;\n\t}\n\t.introjs-nextbutton {\n\t\tright: 0;\n\t}\n\t.introjs-donebutton {\n\t\t--interactive-rgb: var(--rgb-secondary-01);\n\t\t--button-background: var(--color-primary-default);\n\t\t--button-color: var(--color-secondary-01);\n\t\t--button-padding: 0 var(--spacing-scale-3x);\n\t\t--button-radius: 100em;\n\t\ttext-shadow: none;\n\t\twidth: auto;\n\t\tposition: static;\n\t\tfloat: none;\n\t\tmargin-bottom: var(--onboarding-padding);\n\t}\n\t.introjs-disabled {\n\t\t@include disabled;\n\t}\n}\n\n@mixin onboarding-bullets {\n\t.introjs-bullets {\n\t\tul {\n\t\t\tli {\n\t\t\t\ta {\n\t\t\t\t\t--interactive-rgb: var(--rgb-secondary-06);\n\t\t\t\t\t@include hover;\n\t\t\t\t\topacity: var(--disabled);\n\t\t\t\t\tposition: relative;\n\t\t\t\t\tz-index: 1;\n\t\t\t\t\t&.active {\n\t\t\t\t\t\tbackground: var(--color-primary-lighten-01);\n\t\t\t\t\t\topacity: 1;\n\t\t\t\t\t\twidth: 6px;\n\t\t\t\t\t}\n\t\t\t\t\t&:focus,\n\t\t\t\t\t&:hover {\n\t\t\t\t\t\twidth: 6px;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n@mixin onboarding-skip {\n\t.introjs-tooltip-header {\n\t\t.introjs-skipbutton {\n\t\t\tvisibility: hidden;\n\t\t\tposition: absolute;\n\t\t\tz-index: 0;\n\t\t}\n\t}\n\t.introjs-skip {\n\t\tmargin-bottom: var(--onboarding-padding);\n\t\ttext-align: center;\n\t\tposition: relative;\n\t\tz-index: 1;\n\t\t.introjs-skipbutton {\n\t\t\tfloat: none;\n\t\t}\n\t}\n}\n\n@mixin onboarding-tooltip {\n\tbackground: var(--onboarding-tooltip-background);\n\tcolor: var(--onboarding-tooltip-color);\n\t.introjs-arrow {\n\t\t&.left-bottom {\n\t\t\tborder-right-color: var(--onboarding-tooltip-background);\n\t\t}\n\t\t&.right-bottom {\n\t\t\tborder-left-color: var(--onboarding-tooltip-background);\n\t\t}\n\t\t&.top,\n\t\t&.top-middle,\n\t\t&.top-right {\n\t\t\tborder-bottom-color: var(--onboarding-tooltip-background);\n\t\t}\n\t\t&.bottom {\n\t\t\tborder-top-color: var(--onboarding-tooltip-background);\n\t\t}\n\t}\n}\n\n@mixin onboarding-floating {\n\t&.introjs-floating {\n\t\tbackground: var(--onboarding-background);\n\t\tcolor: var(--onboarding-color);\n\t\t.introjs-nextbutton {\n\t\t\t--interactive-rgb: var(--rgb-secondary-01);\n\t\t\t--button-background: var(--color-primary-default);\n\t\t\t--button-color: var(--color-secondary-01);\n\t\t}\n\t\t.introjs-prevbutton {\n\t\t\t--button-background: var(--color-secondary-01);\n\t\t\t--button-border: var(--color-primary-default);\n\t\t}\n\t}\n}\n\n.introjs-tooltip {\n\t@include onboarding;\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Desabilitado\n@mixin disabled {\n\tcursor: not-allowed;\n\topacity: var(--disabled);\n\n\t* {\n\t\tpointer-events: none;\n\t}\n}\n\n// Hover\n@mixin hover {\n\t&:not(:disabled) {\n\t\t&:hover {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--hover)),\n\t\t\t\trgba(var(--interactive-rgb), var(--hover))\n\t\t\t);\n\t\t}\n\t\t&:active {\n\t\t\tbackground-image: linear-gradient(\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed)),\n\t\t\t\trgba(var(--interactive-rgb), var(--pressed))\n\t\t\t);\n\t\t}\n\t}\n}\n\n// Focus\n@mixin focus {\n\t&:focus {\n\t\toutline: none;\n\t}\n\n\t&.focus-visible,\n\t&:focus-visible {\n\t\toutline-color: var(--focus-color);\n\t\toutline-offset: var(--focus-offset);\n\t\toutline-style: var(--focus-style);\n\t\toutline-width: var(--focus-width);\n\t}\n}\n\n@mixin focus-shadow {\n\tborder-color: var(--focus-color);\n\tbox-shadow: 0 0 0 var(--surface-width-md) var(--focus-color);\n\toutline: none;\n}\n\n// Ativo\n@mixin active {\n\tbackground: var(--active);\n\tcolor: var(--color-secondary-01);\n}\n\n// Dark mode\n@mixin dark-mode {\n\t--text-color: var(--color-secondary-01);\n\t--interactive: var(--color-primary-pastel-01);\n\t--interactive-rgb: var(--rgb-primary-pastel-01);\n\t--visited: var(--color-secondary-04);\n\t--hover: var(--surface-opacity-sm);\n\t--pressed: var(--surface-opacity-lg);\n\t--focus-color: var(--color-support-10);\n\t--active: var(--color-secondary-01);\n}\n@mixin light-mode {\n\t--text-color: var(--color-secondary-08);\n\t--interactive: var(--color-primary-default);\n\t--interactive-rgb: var(--rgb-primary-default);\n\t--visited: var(--color-primary-darken-01);\n\t--hover: var(--surface-opacity-xs);\n\t--pressed: var(--surface-opacity-md);\n\t--focus-color: var(--color-support-03);\n\t--active: var(--color-primary-darken-01);\n}\n","@mixin button {\n  @include button-tokens;\n  @include button-base;\n  @include button-block;\n  @include button-circle;\n  @include button-sizes;\n  @include button-emphasis;\n  @include button-colors;\n  @include button-states;\n}\n\n@mixin button-tokens {\n  --button-background: transparent;\n  --button-border: transparent;\n  --button-color: var(--interactive);\n  --button-radius: 100em;\n  --button-font-size: var(--font-size-scale-up-01);\n  --button-font-weight: var(--font-weight-semi-bold);\n  --button-xsmall: 24px;\n  --button-small: 32px;\n  --button-medium: 40px;\n  --button-large: 48px;\n  --button-size: var(--button-medium);\n  --button-padding: 0 var(--spacing-scale-3x);\n  --button-img: 20px;\n}\n\n@mixin button-base {\n  --interactive-rgb: var(--rgb-primary-default);\n  align-items: center;\n  background-color: var(--button-background);\n  border: 1px solid var(--button-border);\n  border-radius: var(--button-radius);\n  color: var(--button-color);\n  cursor: pointer;\n  display: inline-flex;\n  font-size: var(--button-font-size);\n  font-weight: var(--button-font-weight);\n  height: var(--button-size);\n  justify-content: center;\n  padding: var(--button-padding);\n  text-align: center;\n  vertical-align: middle;\n  white-space: nowrap;\n  width: auto;\n\n  img {\n    max-height: var(--button-img);\n  }\n}\n\n@mixin button-block {\n  &.block {\n    width: 100%;\n  }\n  @each $breakpoint in \"sm\", \"md\", \"lg\", \"xl\" {\n    @include media-breakpoint-up(#{$breakpoint}) {\n      &.block-#{$breakpoint} {\n        width: 100%;\n      }\n      &.auto-#{$breakpoint} {\n        width: auto;\n      }\n    }\n  }\n}\n\n@mixin button-circle {\n  &.circle,\n  &[circle],\n  &.is-circle {\n    border-radius: 50%;\n    padding: 0;\n    width: var(--button-size);\n  }\n}\n\n@mixin button-sizes {\n  @each $size in \"xsmall\", \"small\", \"medium\", \"large\" {\n    &.#{$size},\n    &[#{$size}],\n    &.is-#{$size} {\n      --button-size: var(--button-#{$size});\n    }\n  }\n}\n\n@mixin button-emphasis {\n  &.primary,\n  &[primary],\n  &.is-primary {\n    --interactive-rgb: var(--rgb-secondary-01);\n    --button-background: var(--color-primary-default);\n    --button-color: var(--color-secondary-01);\n\n    &.inverted,\n    &.is-inverted,\n    &[inverted] {\n      --interactive-rgb: var(--rgb-primary-default);\n      --hover: var(--surface-opacity-xs, 0.16);\n      --button-background: var(--color-secondary-01);\n      --button-color: var(--color-primary-default);\n    }\n  }\n\n  &.secondary,\n  &[secondary],\n  &.is-secondary {\n    --button-background: var(--color-secondary-01);\n    --button-border: var(--color-primary-default);\n\n    &.inverted,\n    &.is-inverted,\n    &[inverted] {\n      --hover: var(--surface-opacity-xs, 0.16);\n      --button-background: var(--color-primary-default);\n      --button-border: var(--color-secondary-01);\n      --button-color: var(--color-secondary-01);\n    }\n  }\n\n  &.inverted,\n  &.is-inverted,\n  &[inverted] {\n    --interactive: var(--color-secondary-01);\n    --interactive-rgb: var(--rgb-secondary-01);\n    --hover: var(--surface-opacity-sm, 0.3);\n    --focus-color: var(--color-support-10);\n  }\n}\n\n@mixin button-colors {\n  @each $color in \"danger\", \"success\", \"warning\", \"info\" {\n    &.#{$color},\n    &[#{$color}],\n    &.is-#{$color} {\n      --button-background: var(--color-#{$color});\n      @if $color != \"warning\" {\n        --button-color: var(--color-secondary-01);\n      }\n    }\n  }\n}\n\n@mixin button-states {\n  &:disabled {\n    cursor: not-allowed;\n  }\n\n  &:not(:disabled) {\n    @include focus;\n    @include hover;\n  }\n\n  &.active,\n  &.is-active,\n  &[active] {\n    --button-background: var(--active);\n    --button-color: var(--color-secondary-01);\n\n    &:hover {\n      --interactive-rgb: var(--rgb-secondary-01);\n      --hover: var(--surface-opacity-sm, 0.3);\n    }\n  }\n\n  &.loading,\n  &[loading],\n  &.is-loading {\n    &::after {\n      border-color: var(--button-color) var(--button-color) transparent;\n      border-style: solid;\n    }\n\n    &.primary,\n    &.danger,\n    &.success,\n    &.info {\n      &::after {\n        border-color: var(--button-color) var(--button-color) transparent;\n      }\n    }\n  }\n}\n"]}